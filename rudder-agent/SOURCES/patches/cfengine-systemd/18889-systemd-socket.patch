diff --git a/configure.ac b/configure.ac
index 5975e637d5..5c715128e5 100644
--- a/configure.ac
+++ b/configure.ac
@@ -502,6 +502,19 @@ CF3_WITH_LIBRARY(pcre, [
                       AC_MSG_ERROR(Cannot find PCRE))])
 ])
 
+dnl systemd-socket activation
+
+AC_ARG_WITH([systemd-socket], [AS_HELP_STRING([--with-systemd-socket[[=PATH]]], [support systemd socket activation])], [], [with_systemd_socket=check])
+
+
+if test "x$with_systemd_socket" != xno
+then
+   CF3_WITH_LIBRARY(systemd_socket, [
+      AC_CHECK_LIB(systemd, sd_listen_fds, [], [if test "x$with_systemd_socket" != xcheck; then AC_MSG_ERROR(Cannot find systemd library); fi])
+      AC_CHECK_HEADERS(systemd/sd-daemon.h, [], [if test "x$with_systemd_socket" != xcheck; then AC_MSG_ERROR(Cannot find systemd headers); fi])
+   ])
+fi
+
 dnl libvirt
 
 AC_ARG_WITH([libvirt],
diff --git a/libcfnet/Makefile.am b/libcfnet/Makefile.am
index b10dc52b1e..e0c1a65b9f 100644
--- a/libcfnet/Makefile.am
+++ b/libcfnet/Makefile.am
@@ -26,6 +26,7 @@ noinst_LTLIBRARIES = libcfnet.la
 AM_CPPFLAGS = -I$(top_srcdir)/libntech/libutils \
 	-I$(top_srcdir)/libpromises \
 	$(PCRE_CPPFLAGS) \
+	$(SYSTEMD_SOCKET_CPPFLAGS) \
 	$(OPENSSL_CPPFLAGS)
 
 libcfnet_la_SOURCES = \
diff --git a/libcfnet/server_code.c b/libcfnet/server_code.c
index b7db2bbfcb..00dddf019a 100644
--- a/libcfnet/server_code.c
+++ b/libcfnet/server_code.c
@@ -8,6 +8,9 @@
 #include <signals.h>                    // GetSignalPipe
 #include <cleanup.h>                    // DoCleanupAndExit
 #include <ctype.h>                      // isdigit
+#if HAVE_SYSTEMD_SD_DAEMON_H
+#include <systemd/sd-daemon.h>          // sd_listen_fds
+#endif // HAVE_SYSTEMD_SD_DAEMON_H
 
 /* Wait up to a minute for an in-coming connection.
  *
@@ -192,20 +195,32 @@ static int OpenReceiverChannel(char *bind_address)
  */
 int InitServer(size_t queue_size, char *bind_address)
 {
-    int sd = OpenReceiverChannel(bind_address);
-
-    if (sd == -1)
-    {
-        Log(LOG_LEVEL_ERR, "Unable to start server");
-    }
-    else if (listen(sd, queue_size) == -1)
+#if HAVE_SYSTEMD_SD_DAEMON_H
+    int n = sd_listen_fds(0);
+    if (n > 1) {
+        Log(LOG_LEVEL_ERR, "Too many file descriptors received from systemd");
+    } else if (n == 1) {
+        // we can check here that we have a socket with sd_is_socket_inet(3)
+        // but why should we limit ourselves
+        return SD_LISTEN_FDS_START;
+    } else 
+#endif // HAVE_SYSTEMD_SD_DAEMON_H
     {
-        Log(LOG_LEVEL_ERR, "listen failed. (listen: %s)", GetErrorStr());
-        cf_closesocket(sd);
-    }
-    else
-    {
-        return sd;
+        int sd = OpenReceiverChannel(bind_address);
+
+        if (sd == -1)
+        {
+            Log(LOG_LEVEL_ERR, "Unable to start server");
+        }
+        else if (listen(sd, queue_size) == -1)
+        {
+            Log(LOG_LEVEL_ERR, "listen failed. (listen: %s)", GetErrorStr());
+            cf_closesocket(sd);
+        }
+        else
+        {
+            return sd;
+        }
     }
 
     DoCleanupAndExit(EXIT_FAILURE);
diff --git a/libpromises/Makefile.am b/libpromises/Makefile.am
index ef354fe249..c2afa52582 100644
--- a/libpromises/Makefile.am
+++ b/libpromises/Makefile.am
@@ -47,7 +47,7 @@ AM_CFLAGS = $(CORE_CFLAGS) $(ENTERPRISE_CFLAGS) \
 AM_YFLAGS = -d
 
 LIBS = $(LMDB_LIBS) $(TOKYOCABINET_LIBS) $(QDBM_LIBS) \
-	$(PCRE_LIBS) $(OPENSSL_LIBS) $(SQLITE3_LIBS) $(LIBACL_LIBS) $(LIBYAML_LIBS) $(LIBCURL_LIBS)
+	$(PCRE_LIBS) $(OPENSSL_LIBS) $(SQLITE3_LIBS) $(LIBACL_LIBS) $(LIBYAML_LIBS) $(LIBCURL_LIBS) $(SYSTEMD_SOCKET_LIBS)
 
 libpromises_la_LIBADD = ../libntech/libutils/libutils.la ../libcfnet/libcfnet.la \
 	../libenv/libenv.la $(ENTERPRISE_LDADD)
diff --git a/misc/systemd/cf-serverd.socket b/misc/systemd/cf-serverd.socket
new file mode 100644
index 0000000000..8c4d12de8f
--- /dev/null
+++ b/misc/systemd/cf-serverd.socket
@@ -0,0 +1,12 @@
+[Unit]
+Description=CFEngine Enterprise file server socket
+PartOf=cfengine3.service
+Before=cf-serverd.service
+
+[Socket]
+ListenStream = 5309
+
+[Install]
+WantedBy=multi-user.target
+WantedBy=cfengine3.service
+WantedBy=sockets.target
